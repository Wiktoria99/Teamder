W folderze backend/teamder/     
python manage.py runserver      (trzeba zainstalowac requirements.txt)

http://127.0.0.1:8000/admin
Panel logowania do panelu administratora:
l: admin
h: admin
I można tu dodawać i oglądać dane w bazie

http://127.0.0.1:8000/api/login     POST
username: <username>
password: <password>

http://127.0.0.1:8000/api/register  POST
przykładowe body requesty:
{
    "user_name":"test_user99", 
    "email":"test99@email.com", 
    "password":"maslo",
    "password2":"maslo",
    "name":"Andrzej",
    "surname":"Duda",
    "age":69,
    "bio":"Jestem raperem, walcze z ostrym cieniem mgły.",
    "social_media_URL1":"https://www.google.com",
    "social_media_URL2":"https://www.facebook.com/",
    "social_media_URL3":"https://github.com/Wiktoria99/Teamder/tree/main",
    "list_of_interests":[1, "muzyka", "TAKIEGO ZAINTERESOWANIE NIE MA", 999999]
}
UWAGI:
-jeszcze nie ma lokalizacji, bo nie zrobiliśmy jej jeszcze na backendzie (można wysyłać ale sie nie zapisze)
-w linkach social_media na początku muszą być te śmieszne https:// bo jak nie dacie to walidacja nie przejdzie
    (może kiedyś to zmienie na zwykłego stringa, ale wtedy będzie tam można cokolwiek wpisać)
-w list_of_interests można wpisać zarówno nazwę zainteresowania jak i jego id (backed łyknie dowolne),
    w przypadku gdy wpiszemy zainteresowanie którego nie ma zostanie pominięte

http://127.0.0.1:8000/api/getUserInfo   GET
w headerze zapytania musi byc 
Authorization: Token <token> 

http://127.0.0.1:8000/api/interests     GET


http://127.0.0.1:8000/api/teams         GET


http://127.0.0.1:8000/api/createTeam    POST
w headerze zapytania musi byc token do utoryzacji tak jak w getUserInfo
Authorization: Token <token> 
name: <nazwa zespołu>
date: <data wydarzenia>
hostem automatycznie zostaje uzytkownik który towrzy team (którego token wysyłamy w headerze)